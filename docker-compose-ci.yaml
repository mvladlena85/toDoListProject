version: "3.8"

services:
  front:
    image: sermalenk/skypro-front:lesson-36
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
      collect_static:
        condition: service_completed_successfully
    volumes:
      - django_static:/usr/share/nginx/html/static
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  api:
    image: mvladlena85/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  collect_static:
    image: mvladlena85/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file: .env
    entrypoint: ''
    volumes:
      - django_static:/todolist/static/
    command: python3 manage.py collectstatic -c --no-input

  migrations:
    image: mvladlena85/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate

  postgres:
    image: postgres:12.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_DATABASE
    restart: always
    expose:
      - "5432"
    healthcheck:
      test: pg_isready -U $DB_USER -d $DB_DATABASE
      interval: 5s
      timeout: 5s
      retries: 15

volumes:
  postgres_data:
  django_static:
  
