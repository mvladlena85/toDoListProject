name: Build and deploy action
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # Копируем код из репозитория в runner
      - name: clone code 
        uses: actions/checkout@v3
     # Собираем
      - name: docker build
        run: docker build -t mvladlena85/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: docker push
        run: docker push mvladlena85/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_USER: ${{ secrets.DB_USER }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: render configs
        run: |
          rm -rf deploy
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat ci.env | envsubst > deploy/.env
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          # Указываем, какие файлы копировать
          source: "deploy/docker-compose.yaml,deploy/.env,nginx.conf"
          # Место на виртуальной машине, куда скопируются файлы
          target: "deploy"
          strip_components: 1
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          # Переходим в директорию и запускаем через sudo команду docker-compose up
          script: |
            cd deploy
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d
      - name: clean up
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker system prune -a -f
            
