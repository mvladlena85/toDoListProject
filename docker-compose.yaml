version: "3.8"

services:
  front:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    ports:
      - "82:80"
    depends_on:
      - api

  api:
    build: .
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.env:/api/.env
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "8000:8000"

  migrations:
    build:
      context: .
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate

  postgres:
    image: postgres:12.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    restart: always
    expose:
      - ${DB_PORT}
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_DATABASE}
      interval: 5s
      timeout: 5s
      retries: 15

volumes:
  postgres_data:
